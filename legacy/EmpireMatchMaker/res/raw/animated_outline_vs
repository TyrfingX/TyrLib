uniform mat4 u_MVPMatrix;       // A constant representing the combined model/view/projection matrix.
uniform mat4 u_Bone[55]; 		// Array of bones
uniform float u_Size;

attribute vec4 a_BoneIndex;		// Per-vertex bone bindings
attribute vec4 a_BoneWeight;	// Per-vertex per bone weighing	

attribute vec4 a_Position;      // Per-vertex position information we will pass in.
attribute vec3 a_Normal;        // Per-vertex normal information we will pass in.
 
// The entry point for our vertex shader.
void main()
{
	vec4 position = vec4(vec3(a_Position) + u_Size * a_Normal, 1.0);
 
 	vec4 normal = vec4(a_Normal, 0.0);
 
 	mat4 boneMatrix =  	a_BoneWeight.x * u_Bone[ int(a_BoneIndex.x) ];
    position = boneMatrix * position;
	normal = normalize(boneMatrix * normal);
 
    // gl_Position is a special variable used to store the final position.
    // Multiply the vertex by the matrix to get the final point in normalized screen coordinates.
    gl_Position = u_MVPMatrix * position;
    
}